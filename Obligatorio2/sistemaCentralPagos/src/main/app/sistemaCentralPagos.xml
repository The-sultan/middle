<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc" xmlns:cluster="http://www.mulesoft.org/schema/mule/ee/cluster"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
		http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
		http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
		http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
		http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
		http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
		http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
		http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
		http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
		http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd"">

	<configuration doc:name="Configuration">
		<http:config useTransportForUris="false" />
	</configuration>
	<http:listener-config name="HTTP_Listener_Configuration"
		host="localhost" port="8081" doc:name="HTTP Listener Configuration">
		<http:worker-threading-profile
			poolExhaustedAction="WAIT" />
	</http:listener-config>
	<http:request-config name="HTTP_Request_Configuration"
		host="localhost" port="8080" doc:name="HTTP Request Configuration" />
	<ws:consumer-config name="Web_Service_Amazonia"
		wsdlLocation="http://localhost:8080/stockLocal/services/stock_local?wsdl"
		service="StockLocalService" port="StockLocalPort"
		serviceAddress="http://localhost:8080/stockLocal/services/stock_local"
		doc:name="Web Service Consumer" />
	<file:connector name="FileConnector" outputPattern="#[server.dateTime]"
		writeToDirectory="#[server.userHome+server.fileSeparator+'Middleware-Ordenes']"
		readFromDirectory="#[server.userHome+server.fileSeparator+'Middleware-Confirmaciones']"
		workDirectory="#[server.userHome+server.fileSeparator+'Middleware-Logs']"
		autoDelete="true" streaming="true" validateConnections="true"
		doc:name="File" workFileNamePattern="test.csv" />



	<flow name="ReservaPedido-Stock">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/stockAmazonia" doc:name="HTTP" />
		<!-- <logger message=".#[message.inboundProperties.'http.request.path']" -->
		<!-- level="INFO" doc:name="Logger" /> -->
		<cxf:jaxws-service doc:name="CXF-STOCKService"
			serviceClass="uy.edu.fing.middleware.obligatorio2.ws.interfaces.StockAmazoniaService"
			port="StockServicePort" service="StockService" />
		<message-properties-transformer scope="invocation"
			doc:name="Message Properties">
			<delete-message-property key="method" />
		</message-properties-transformer>
		<response>
			<custom-transformer
				class="uy.edu.middleware.obligatorio2.transformers.AmazoniaResponseTransformer"
				doc:name="Java" />
		</response>
		<custom-transformer
			class="uy.edu.middleware.obligatorio2.transformers.ItemToReservaProductoTransformer"
			doc:name="Java" />

		<cxf:jaxws-client
			wsdlLocation="http://localhost:8080/stockLocal/services/stock_local?wsdl"
			operation="reservaProductos" doc:name="CXF"
			serviceClass="uy.edu.fing.middleware.generated.amazonia.StockLocal" />
		<outbound-endpoint exchange-pattern="request-response"
			address="http://localhost:8080/stockLocal/services/stock_local"
			doc:name="Generic" />


	</flow>

	<flow name="AnulacionPedido-Stock">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/anularStockAmazonia" doc:name="HTTP" />
		<cxf:jaxws-service doc:name="CXF-STOCKService"
			serviceClass="uy.edu.fing.middleware.obligatorio2.ws.interfaces.AnularStockAmazoniaService"
			port="AnularStockServicePort" service="AnularStockService" />

		<message-properties-transformer scope="invocation"
			doc:name="Message Properties">
			<delete-message-property key="method" />
		</message-properties-transformer>
		<response>
			<custom-transformer
				class="uy.edu.middleware.obligatorio2.transformers.AnularAmazoniaResponseTransformer"
				doc:name="Java" />
		</response>
		<cxf:jaxws-client
			wsdlLocation="http://localhost:8080/stockLocal/services/stock_local?wsdl"
			operation="anularReserva" doc:name="CXF"
			serviceClass="uy.edu.fing.middleware.generated.amazonia.StockLocal" />
		<outbound-endpoint exchange-pattern="request-response"
			address="http://localhost:8080/stockLocal/services/stock_local"
			doc:name="Generic" />
	</flow>
	<flow name="ConfirmacionPedido-ePuerto">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/logStockAmazonia" doc:name="HTTP" />
		<logger message=".#[message.inboundProperties.'http.request.path']"
			level="INFO" doc:name="Logger" />
		<!-- <cxf:jaxws-service doc:name="CXF-STOCKService" -->
		<!-- serviceClass="uy.edu.fing.middleware.obligatorio2.ws.interfaces.LogStockAmazoniaService" 
			/> -->
		<!-- <component -->
		<!-- class="uy.edu.fing.middleware.obligatorio2.ws.endpoint.LogStockAmazoniaServiceImpl" -->
		<!-- doc:name="Java" /> -->
		<ws:consumer config-ref="Web_Service_Amazonia" operation="stockLocalLog"
			doc:name="Web Service Consumer" />
	</flow>
	<flow name="ReservaPedido-ePuerto">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/stockEPuerto" doc:name="HTTP" />
		<logger message=".#[message.inboundProperties.'http.request.path']"
			level="INFO" doc:name="Logger" />
		<cxf:jaxws-service
			serviceClass="uy.edu.fing.middleware.obligatorio2.ws.interfaces.StockEPuertoService"
			doc:name="CXF-STOCKService" />
		<message-properties-transformer scope="invocation"
			doc:name="Message Properties">
			<delete-message-property key="method" />
		</message-properties-transformer>
		<expression-transformer
			expression="#['identificadorCompra,identificadorProducto,cantidad\n' + payload.idCompra+','+payload.idProducto+','+payload.cantidad ]"
			doc:name="Expression" />
		<set-session-variable variableName="freezeDateTime"
			value="#[server.dateTime]" doc:name="Store Date Time" />
		<set-session-variable variableName="inputfilepath"
			value="#[server.userHome+server.fileSeparator+'Middleware-Confirmaciones'+server.fileSeparator+'compra-'+sessionVars['freezeDateTime']+'.csv']"
			doc:name="Input Filepath" />
		<file:outbound-endpoint path="#[server.userHome+server.fileSeparator+'Middleware-Ordenes']"
			outputPattern="#['compra-' +sessionVars['freezeDateTime']+'.csv']"
			connector-ref="FileConnector" responseTimeout="10000" doc:name="e-puerto Ordenes" />
		<scripting:component doc:name="Groovy">
			<scripting:script engine="Groovy"><![CDATA[
						sleep(10000);
						new File(sessionVars['inputfilepath']).text]]></scripting:script>
		</scripting:component>
		<object-to-string-transformer doc:name="Object to String" />
		<splitter expression="#[org.mule.util.StringUtils.split(message.payload, '\n')]"
			doc:name="Splitter" />
		<expression-transformer
			expression="#[org.mule.util.StringUtils.split(message.payload, ',')]"
			doc:name="Expression" />
		<object-to-string-transformer doc:name="Object to String" />

	</flow>

	<flow name="flowextra">
		<splitter expression="#[StringUtils.split(message.payload, '\n\r')]"
			doc:name="Splitter" />
		<expression-transformer expression="#[StringUtils.split(message.payload, ',')]"
			doc:name="Expression" />
	</flow>

	<flow name="AnulacionPedido-ePuerto-SOAP">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/cancelaEPuerto" doc:name="HTTP" />

		<cxf:jaxws-service
			serviceClass="uy.edu.fing.middleware.obligatorio2.ws.interfaces.CancelaEPuertoService"
			doc:name="CXF-STOCKService" />
		<component
			class="uy.edu.fing.middleware.obligatorio2.ws.endpoint.CancelaEPuertoServiceImpl"
			doc:name="Java" />
		<!-- <splitter enableCorrelation="ALWAYS" expression="#[payload.productos]" -->
		<!-- doc:name="Copy_of_Splitter"> -->
		<!-- <expression-message-info-mapping -->
		<!-- messageIdExpression="#[java.util.UUID.randomUUID().toString()]" -->
		<!-- correlationIdExpression="#[payload.idCompra]" /> -->
		<!-- </splitter> -->
		<expression-transformer expression="#['idReserva\n' + payload.idReserva]"
			doc:name="Expression" />
		<file:outbound-endpoint
			path="#[server.userHome+'/Middleware-Cancelaciones']" outputPattern="#['compra-'+message.correlationId+'-' +server.dateTime]"
			responseTimeout="10000" doc:name="e-puerto Ordenes" />
	</flow>
	<flow name="mulePagosYa">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/pagosYa" doc:name="HTTP" />
		<cxf:jaxws-service doc:name="CXF-Service2"
			serviceClass="uy.edu.fing.middleware.obligatorio2.ws.interfaces.PagosRestService" />
		<message-properties-transformer scope="invocation"
			doc:name="Message Properties">
			<delete-message-property key="method" />
			<!-- <response> -->
			<!-- <custom-transformer -->
			<!-- class="uy.edu.middleware.obligatorio2.transformers.PagoResponseTransformer" -->
			<!-- doc:name="Java" /> -->
			<!-- </response> -->
		</message-properties-transformer>
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<response>
			<object-to-string-transformer doc:name="Object to String" />
			<custom-transformer
				class="uy.edu.middleware.obligatorio2.transformers.PagoResponseTransformer"
				doc:name="Java" />
		</response>
		<logger message=".#[message.payload]" level="INFO" doc:name="Logger" />
		<http:request config-ref="HTTP_Request_Configuration"
			path="pedidosYa/rest/pagoyaservice" method="POST" doc:name="HTTP" />


	</flow>

    <jms:activemq-connector name="Active_MQ" validateConnections="true" durable="true" persistentDelivery="true" doc:name="Active MQ" clientId="Amazonia"  specification="1.1" brokerURL="tcp://localhost:61616"/>

    <flow name="AnulacionPedido-ePuerto-JMS" initialState="started" tracking:enable-default-events="true">
        <jms:inbound-endpoint topic="anulacion-pedido" connector-ref="Active_MQ" tracking:enable-default-events="true" durableName="ePuerto" doc:name="JMS-AnulacionPedido" />
        <logger message="Anulacion recibida" level="INFO" doc:name="Logger"/>
        <byte-array-to-object-transformer returnClass="java.lang.String" ignoreBadInput="true" metadata:id="7019270b-827f-41e3-b044-afd740b8f795" doc:name="Byte Array to Object"/>
        <file:outbound-endpoint path="#[server.userHome+'/Middleware-Cancelaciones']" outputPattern="#['anulacion-'+message.correlationId+'-' +server.dateTime]" responseTimeout="10000" doc:name="File"/>
    </flow>
    
</mule>
